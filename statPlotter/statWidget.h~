#ifndef STATWIDGET_H
#define STATWIDGET_H

#include <qgl.h>
#include <vector>
#include <string>


using namespace std;

struct plotData {
  plotData();        // empty constructor, maybe I need it..
  void setData(vector<float> xv, vector<float> yv, vector<float> zv);
  vector<float> x;
  vector<float> y;
  vector<float> z;     // the actual values
  
  float tmaxX;
  float tminX;
  float tminY;
  float tmaxY;
  float tminZ;
  float tmaxZ;        // thresholds for plotting, or color change ??

  float minX;
  float maxX;
  float minY;
  float maxY;
  float minZ;
  float maxZ;          // the min's and maxes for different scales. so we can calculate once

  string xName;
  string yName;
  string zName;     // axis identifiers.. 

  bool xLog;
  bool yLog;
  bool zLog;        // log or linear axis.. ?
};

class StatWidget : public QGLWidget
{
  Q_OBJECT

    public :
    StatWidget(QWidget* parent=0, const char* name=0);
  ~StatWidget();

  public slots:
    void setModel(plotData& pd);
  
 protected:
  void initializeGL();
  void paintGL();
  void resizeGL(int w, int h);
  void paintEvent(QPaintEvent* e);
  void mouseMoveEvent(QMouseEvent* e);  // for rotation and so on..
  void mousePressEvent(QMouseEvent* e); // for setting lastX and lastY

 private:
  GLuint model;   // created from a plotData struct in the setModel thingy. 
  GLfloat xRot, yRot, zRot, xScale, yScale, zScale, xOffset, yOffset, zOffset;
  int lastX, lastY;
  void drawCube(GLfloat x, GLfloat y, GLfloat z, GLfloat w);
  //void drawSomeStats(); 

};

#endif
