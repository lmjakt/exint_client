#ifndef JPGVIEW_H
#define JPGVIEW_H

#include <qwidget.h>
#include <qsize.h>
#include <qimage.h>
#include <qstring.h>
#include <qrect.h>
#include <qcstring.h>

using namespace std;

class JpgView : public QWidget
{
  Q_OBJECT
    public :
    JpgView(QWidget* parent=0, const char* name=0);
  ~JpgView();
  QSize sizeHint() const;
  QImage* imagePointer(){
    return(image);
  }
  QSize viewSize(){
    return(scaledImage.size());
  }

  public slots :
    void setImage(QByteArray data);
  void scale(float f);      // a float between 0 and 1.. if not than set to 1. 
  private :
    void paintEvent(QPaintEvent* e);
 
  virtual void mouseMoveEvent(QMouseEvent* e);
  virtual void mousePressEvent(QMouseEvent* e);
  virtual void mouseReleaseEvent(QMouseEvent* e);
  
  protected :
  // how to select the drawing area..
  int lastX;
  int lastY;
  float yo;
  float xo;   // the drawing offsets.. -- only draw the size of the widget, and offset according to these values.. 
  float currentScale;
  float virtualScale;  // for keeping track of stuff...
  //bool moving;         // don't draw if moving..              // have offsets between 0 and 1 as fractional offsets.. 
  bool printZoomFactor;    // paint event just for painting zoom factor or for other purpose?? 
  QImage* image;
  QImage scaledImage;

  int x, y;                // set at a mouse press event.. if we want to keep.. 


  signals : 
    //void moveMe(int, int);   // move me please.. 
};

#endif
