#ifndef SOMDRAWER_H
#define SOMDRAWER_H

#include <qwidget.h>
#include <vector>
#include "somProcess.h"       // for the mapDescription.. 

using namespace std;

//    a class that draws a som, and it's nodes based on very generic descriptions of these
//    doesn't rely on special structs, but just takes a series of vector data .. ..

class SomDrawer : public QWidget
{
  Q_OBJECT
    public :
    SomDrawer(QWidget* parent=0, const char* name=0);
  ~SomDrawer();
  
  void setData(mapDescription md);
  
  private :
    void paintEvent(QPaintEvent* e);
  float euclidean(vector<float>& v1, vector<float>& v2);

  // and something for the data to be stored in..
  mapDescription smap;
  vector<float> fwd;
  vector<float> down;   // forward and down distances, calculate so we can display some measure of distance 
                        // between points.. 

  // values used to determine drawing..
  float maxX, minX, maxY, minY;
  float maxEuclidean, minEuclidean;
  int nodeDiameter;                       // how big to draw nodes of the map.
  int pointDiameter;
  int margin;                         // we want some space around.. -- have same x and y margin.
};

#endif
